# using map and Sequence.sum
sum := (a.map x->x*x).sum

# using map and fold
sum := a.map x->x*x
        .fold i32.sum

# using a loop
for
  sum := 0, sum + q
  v in a
  q := v*v
else
  say "sum is $sum"

# using a tail-recursive function
sum_of_squares (sum i32, s list i32) i32 =>
  s ? nil    => sum
    | c Cons => sum_of_squares (sum + c.head**2) c.tail
